events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain text/css text/xml text/javascript
        application/json application/javascript application/xml+rss
        application/rss+xml font/truetype font/opentype
        application/vnd.ms-fontobject image/svg+xml;

    # -----------------------------------
    # WebSocket 연결용 map (server 블록 밖)
    # -----------------------------------
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # -------------------------------
    # HTTP → HTTPS 리다이렉트
    # -------------------------------
    server {
        listen 80;
        server_name linkle.shop www.linkle.shop;

        # Certbot 인증용
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # 나머지는 HTTPS로 리디렉트
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # -------------------------------
    # HTTPS 서버 (리버스 프록시 역할)
    # -------------------------------
    server {
        listen 443 ssl;
        http2 on;
        server_name linkle.shop www.linkle.shop;

        # SSL 인증서 설정
        ssl_certificate /etc/letsencrypt/live/linkle.shop/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/linkle.shop/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        client_max_body_size 50M;

        # -----------------------------------
        # 모든 요청을 백엔드(Spring Boot)로 전달
        # -----------------------------------
        location / {
            proxy_pass http://app:8080;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
			proxy_set_header Origin "";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket 대응
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            # 타임아웃 설정
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
    }
}
